import{r as n,o as a,c as s,a as e,d as o,w as p,F as t,b as c,e as l}from"./app.d91e33a4.js";const i={},r=e("h1",{id:"组件配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#组件配置","aria-hidden":"true"},"#"),c(" 组件配置")],-1),d=e("h2",{id:"示例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#示例","aria-hidden":"true"},"#"),c(" 示例")],-1),u=c("本示例根据"),h=e("code",null,"ant",-1),b=c("官方文档配置修改"),k={href:"https://1x.antdv.com/components/grid-cn/",target:"_blank",rel:"noopener noreferrer"},m=c("a-row"),g=c("，主要介绍"),f=e("code",null,"list",-1),x=c("中的对象"),y=l('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> data<span class="token operator">:</span> ComponentGroupInfo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  id<span class="token operator">:</span> <span class="token string">&#39;layout&#39;</span><span class="token punctuation">,</span>\n  title<span class="token operator">:</span> <span class="token string">&#39;布局&#39;</span><span class="token punctuation">,</span>\n  list<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      id<span class="token operator">:</span> <span class="token string">&#39;a-row&#39;</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token string">&#39;Row&#39;</span><span class="token punctuation">,</span>\n      mpdConfig<span class="token operator">:</span> <span class="token punctuation">{</span>\n        component<span class="token operator">:</span> <span class="token string">&#39;a-row&#39;</span><span class="token punctuation">,</span>\n        model<span class="token operator">:</span> <span class="token punctuation">{</span>\n          test<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mpdPageValue<span class="token punctuation">.</span>test\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        attr<span class="token operator">:</span> <span class="token punctuation">{</span>\n          align<span class="token operator">:</span> <span class="token string">&#39;top&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;padding margin&#39;</span><span class="token punctuation">,</span>\n        style<span class="token operator">:</span> <span class="token punctuation">{</span>\n          color<span class="token operator">:</span> <span class="token string">&#39;#000000&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        event<span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        text<span class="token operator">:</span> <span class="token string">&#39;这个是文本例子&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      ext<span class="token operator">:</span> <span class="token punctuation">{</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;mpd-icon-row&#39;</span><span class="token punctuation">,</span>\n        help<span class="token operator">:</span> <span class="token string">&#39;通过`row`在水平方向建立一组`column`（简写 col）&#39;</span><span class="token punctuation">,</span>\n        childrenComponent<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a-col&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        componentConfig<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;attr&#39;</span><span class="token punctuation">,</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;栅格间隔&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;gutter&#39;</span><span class="token punctuation">,</span>\n            help<span class="token operator">:</span> <span class="token string">&#39;栅格间隔，可以写成像素值或支持响应式的对象写法来设置水平间隔 { xs: 8, sm: 16, md: 24}。或者使用数组形式同时设置 [水平间距, 垂直间距]&#39;</span><span class="token punctuation">,</span>\n            inputList<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                title<span class="token operator">:</span> <span class="token string">&#39;数字输入框&#39;</span><span class="token punctuation">,</span>\n                component<span class="token operator">:</span> ConfigDetailType<span class="token punctuation">.</span>InputNumber<span class="token punctuation">,</span>\n                attr<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  max<span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>\n                  min<span class="token operator">:</span> <span class="token number">0</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            type<span class="token operator">:</span> <span class="token string">&#39;attr&#39;</span><span class="token punctuation">,</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;垂直对齐方式&#39;</span><span class="token punctuation">,</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;align&#39;</span><span class="token punctuation">,</span>\n            help<span class="token operator">:</span> <span class="token string">&#39;flex 布局下的垂直对齐方式&#39;</span><span class="token punctuation">,</span>\n            inputList<span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                component<span class="token operator">:</span> ConfigDetailType<span class="token punctuation">.</span>Select<span class="token punctuation">,</span>\n                attr<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  allowClear<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                  options<span class="token operator">:</span> <span class="token punctuation">[</span>\n                    <span class="token punctuation">{</span>\n                      value<span class="token operator">:</span> <span class="token string">&#39;top&#39;</span><span class="token punctuation">,</span>\n                      label<span class="token operator">:</span> <span class="token string">&#39;顶部&#39;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span>\n                      value<span class="token operator">:</span> <span class="token string">&#39;middle&#39;</span><span class="token punctuation">,</span>\n                      label<span class="token operator">:</span> <span class="token string">&#39;中间&#39;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">{</span>\n                      value<span class="token operator">:</span> <span class="token string">&#39;bottom&#39;</span><span class="token punctuation">,</span>\n                      label<span class="token operator">:</span> <span class="token string">&#39;底部&#39;</span>\n                    <span class="token punctuation">}</span>\n                  <span class="token punctuation">]</span>\n                <span class="token punctuation">}</span>\n              <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br></div></div><h2 id="pagedom" tabindex="-1"><a class="header-anchor" href="#pagedom" aria-hidden="true">#</a> PageDom</h2><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id" aria-hidden="true">#</a> id</h3>',3),v=e("li",null,[c("类型："),e("code",null,"string")],-1),C=e("li",null,[c("必填："),e("code",null,"是")],-1),w=c("重复："),D=l('<p>需要展示的组件名称，此参数会放入到<code>component</code>标签中，当拖拽后该值会放入到<code>mpdConfig.component</code>中，然后会由<code>uuid()</code>生成随机<code>id</code></p><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3><ul><li>类型：<code>string</code></li><li>必填：<code>是</code></li></ul><p>展示拖拽<code>tag</code>的标题</p><h3 id="mpdconfig" tabindex="-1"><a class="header-anchor" href="#mpdconfig" aria-hidden="true">#</a> mpdConfig</h3><ul><li>类型：<code>MpdConfig</code></li><li>必填：<code>否</code></li></ul><p>该属性会直接应用到渲染的<code>component</code>上，可以设置一些默认值，详情<a href="#MpdConfig">MpdConfig</a></p><h3 id="ext" tabindex="-1"><a class="header-anchor" href="#ext" aria-hidden="true">#</a> ext</h3><ul><li>类型：<code>ComponentItemExt</code></li><li>必填：<code>否</code></li></ul><p>记录组件当前组件可用的配置项，主要用于设计器的配置，拖拽后将不会放入到<code>mpdPageConfig</code>对象中，详情<a href="#ComponentItemExt">ComponentItemExt</a></p>',10),P={id:"children",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#children","aria-hidden":"true"},"#",-1),L=c(" children"),V=l('<ul><li>类型：<code>Array&lt;PageDom&gt;</code></li><li>必填：<code>否</code></li></ul><p>当前组件的子节点，可以在拖拽的时候填入一些默认组件，详情<a href="#PageDom">PageDom</a></p><h2 id="mpdconfig-1" tabindex="-1"><a class="header-anchor" href="#mpdconfig-1" aria-hidden="true">#</a> MpdConfig</h2><h3 id="component" tabindex="-1"><a class="header-anchor" href="#component" aria-hidden="true">#</a> component</h3><ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul><p>使用的组件名，作为组件库元素使用时，可以不填，拖拽到页面后如果为空，则取<code>PageDom</code>的<code>id</code>属性</p><h3 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> model</h3><ul><li>类型：<code>{ [key: string]: any }</code></li><li>必填：<code>否</code></li></ul><p>双向绑定属性，该属性值会直接放入<code>eval</code>方法中执行，也就是说执行的是原生<code>js</code>代码，比如想当前组件<code>value</code>绑定<code>mpdPageValue</code>中的属性<code>text</code>，可以写：<code>{value: this.mpdPageValue.text}</code></p><h3 id="attr" tabindex="-1"><a class="header-anchor" href="#attr" aria-hidden="true">#</a> attr</h3><ul><li>类型：<code>{ [key: string]: any }</code></li><li>必填：<code>否</code></li></ul><p>绑定到组件的属性，<code>value</code>支持以<code>$:</code>开头的<code>js</code>源码写法，比如<code>text</code>属性想绑定变量<code>text</code>：<code>{value: this.mpdPageValue.text}</code></p>',12),A={id:"class",tabindex:"-1"},j=e("a",{class:"header-anchor",href:"#class","aria-hidden":"true"},"#",-1),T=c(" class"),E=l('<ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul><h3 id="style" tabindex="-1"><a class="header-anchor" href="#style" aria-hidden="true">#</a> style</h3><ul><li>类型：<code>Array&lt;KeyValue&gt;</code></li><li>必填：<code>否</code></li></ul><p>直接书写原生<code>style</code>样式，比如<code>[{key:&#39;color&#39;,value:&#39;#000000&#39;}]</code>会转换为<code>{color:&#39;#000000&#39;}</code>，详情<a href="#KeyValue">KeyValue</a></p><h3 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> event</h3><ul><li>类型：<code>{ [key: string]: (...arg: any) =&gt; void }</code></li><li>必填：<code>否</code></li></ul><p><code>v-on</code>绑定的事件，支持原生写法，<code>this</code>直接能拿到当前组件对象的原生<code>vue</code>的值，可以直接写<code>js</code>源码，如果是方法，则需要写成<code>(arg1,arg2) =&gt; {}</code>的形式</p><h3 id="text" tabindex="-1"><a class="header-anchor" href="#text" aria-hidden="true">#</a> text</h3><ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul><p>用于展示到组件内部的文本，部分标签支持，比如<code>p</code>标签，所以需要用到该配置的时候，请初始化默认值，并且不能为<code>undefined</code></p><h3 id="configtmp" tabindex="-1"><a class="header-anchor" href="#configtmp" aria-hidden="true">#</a> configTmp</h3><ul><li>类型：<code>{ [key: string]: any }</code></li><li>必填：<code>否</code></li></ul><p>记录一些属性用的配置，用于设计器配置</p><h2 id="keyvalue" tabindex="-1"><a class="header-anchor" href="#keyvalue" aria-hidden="true">#</a> KeyValue</h2><p>此数组对象会自动转换为<code>Object</code></p><h3 id="key" tabindex="-1"><a class="header-anchor" href="#key" aria-hidden="true">#</a> key</h3><ul><li>类型：<code>string</code></li><li>必填：<code>是</code></li></ul><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value" aria-hidden="true">#</a> value</h3><ul><li>类型：<code>string | number</code></li><li>必填：<code>是</code></li></ul><h2 id="componentitemext" tabindex="-1"><a class="header-anchor" href="#componentitemext" aria-hidden="true">#</a> ComponentItemExt</h2><h3 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h3><ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul>',22),K=c("用于拖拽"),M=e("code",null,"tag",-1),F=c("和侧边栏展示的图标，可以不配，最好还是配一下，好看。支持"),$={href:"https://fontawesome.dashgame.com/",target:"_blank",rel:"noopener noreferrer"},_=c("Font Awesome 4"),O=c("简写"),R=l('<h3 id="help" tabindex="-1"><a class="header-anchor" href="#help" aria-hidden="true">#</a> help</h3><ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul><p>帮助信息，会展示到拖拽<code>tag</code>的帮组小图标</p><h3 id="childrencomponent" tabindex="-1"><a class="header-anchor" href="#childrencomponent" aria-hidden="true">#</a> childrenComponent</h3><ul><li>类型：<code>Array&lt;string&gt; | undefined | null</code></li><li>必填：<code>否</code></li></ul><p>子节点支持拖拽的白名单，为<code>undefined</code>则不支持添加子节点，如果字段存在，并且长度为 0，则支持所有的组件。例如<code>a-row</code>的子组件只支持<code>a-col</code>，则需要配置该属性<code>childrenComponent:[&#39;a-col&#39;]</code></p><h3 id="parentcomponent" tabindex="-1"><a class="header-anchor" href="#parentcomponent" aria-hidden="true">#</a> parentComponent</h3><ul><li>类型：<code>Array&lt;string&gt; | undefined | null</code></li><li>必填：<code>否</code></li></ul><p>支持拖入父节点的白名单，为<code>undefined</code>、长度为 0、<code>null</code>则不受控制，如果配置的有对应组件，就会进行父组件验证。例如<code>a-col</code>的父组件只能是<code>a-row</code>，则需要配置该属性<code>parentComponent:[&#39;a-row&#39;]</code></p><h3 id="componentconfig" tabindex="-1"><a class="header-anchor" href="#componentconfig" aria-hidden="true">#</a> componentConfig</h3><ul><li>类型：<code>Array&lt;ComponentConfig&gt;</code></li><li>必填：<code>否</code></li></ul><p>组件自己的配置，主要用于配置双向绑定、属性、事件，如果配置了该项，那右侧栏会多出该组件的配置栏，详情<a href="#ComponentConfig">ComponentConfig</a></p><h2 id="componentconfig-1" tabindex="-1"><a class="header-anchor" href="#componentconfig-1" aria-hidden="true">#</a> ComponentConfig</h2><p>配置信息，对<code>PageDom.mpdConfig</code>中的<code>model,attr,event</code>进行配置，相当于写原生<code>vue</code>代码</p><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3><ul><li>类型：<code>&#39;attr&#39; | &#39;event&#39; | &#39;model&#39;</code></li><li>必填：<code>是</code></li></ul><p>表示当前值是用于修改哪个属性</p><h3 id="title-1" tabindex="-1"><a class="header-anchor" href="#title-1" aria-hidden="true">#</a> title</h3><ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul><p>用于展示当前配置的标题</p><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> name</h3><ul><li>类型：<code>string</code></li><li>必填：<code>是</code></li></ul><p>当前配置项需要修改的<code>key</code>，比如配置了<code>type=attr,name=text</code>，就等于改配置项会影响<code>PageDom.mpdConfig.attr.text</code>的改变</p><h3 id="defaultvalue" tabindex="-1"><a class="header-anchor" href="#defaultvalue" aria-hidden="true">#</a> defaultValue</h3><ul><li>类型：<code>any</code></li><li>必填：<code>否</code></li></ul><p>该配置项对应的默认值，支持以<code>$:</code>开头的<code>js</code>表达式</p><h3 id="group" tabindex="-1"><a class="header-anchor" href="#group" aria-hidden="true">#</a> group</h3><ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul><p>相同分组的放到同一个<code>string</code>下，免得配置项过多，导致配置不好找，也可以进行区分配置项功能</p><h3 id="help-1" tabindex="-1"><a class="header-anchor" href="#help-1" aria-hidden="true">#</a> help</h3><ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul><p>该配置的帮助信息</p><h3 id="inputlist" tabindex="-1"><a class="header-anchor" href="#inputlist" aria-hidden="true">#</a> inputList</h3><ul><li>类型：<code>Array&lt;InputListConfig&gt;</code></li><li>必填：<code>否</code></li></ul><p>可配置列表，详情<a href="#InputListConfig">InputListConfig</a></p><h2 id="inputlistconfig" tabindex="-1"><a class="header-anchor" href="#inputlistconfig" aria-hidden="true">#</a> InputListConfig</h2><p>主要实现配置框的一些原始数据，例如<code>select</code>需要下拉列表数据，<code>attr</code>中的<code>value</code>，如果是<code>$:</code>开头会放入到<code>eval</code>中执行，默认使用<code>ant</code>官方的组件</p><h3 id="title-2" tabindex="-1"><a class="header-anchor" href="#title-2" aria-hidden="true">#</a> title</h3><ul><li>类型：<code>string</code></li><li>必填：<code>否</code></li></ul><p>组件标题，可不填，则显示<code>component</code>字段</p><h3 id="component-1" tabindex="-1"><a class="header-anchor" href="#component-1" aria-hidden="true">#</a> component</h3><ul><li>类型：<code>ConfigDetailType</code></li><li>必填：<code>是</code></li></ul>',42),B=c("默认会添加一个"),G=e("code",null,"a-input",-1),N=c("输入框，可以手动配置一个"),S=e("code",null,"a-input",-1),q=c("用于覆盖默认配置，详情看"),z=c("ConfigDetailType"),H=l('<h3 id="attr-1" tabindex="-1"><a class="header-anchor" href="#attr-1" aria-hidden="true">#</a> attr</h3><ul><li>类型：<code>{ [key: string]: any }</code></li><li>必填：<code>否</code></li></ul><h3 id="event-1" tabindex="-1"><a class="header-anchor" href="#event-1" aria-hidden="true">#</a> event</h3><ul><li>类型：<code>{ [key: string]: Function }</code></li><li>必填：<code>否</code></li></ul>',4);i.render=function(c,l){const i=n("OutboundLink"),J=n("Badge"),Q=n("RouterLink");return a(),s(t,null,[r,d,e("p",null,[u,h,b,e("a",k,[m,o(i)]),g,f,x]),y,e("ul",null,[v,C,e("li",null,[w,o(J,{type:"danger",text:"此参数，全局不能重复，如果重复，请查看console日志",vertical:"middle"})])]),D,e("h3",P,[I,L,o(J,{type:"danger",text:"可能会重新设计类型",vertical:"middle"})]),V,e("h3",A,[j,T,o(J,{type:"danger",text:"暂时不支持表达式，后续扩展",vertical:"middle"})]),E,e("p",null,[K,M,F,e("a",$,[_,o(i)]),O]),R,e("p",null,[B,G,N,S,q,o(Q,{to:"/config/component-library.html#ConfigDetailType"},{default:p((()=>[z])),_:1})]),H],64)};export{i as default};
